jupyterhub:
  scheduling:
    userScheduler:
      enabled: true
  proxy:
    https:
      letsencrypt:
        contactEmail: yuvipanda@berkeley.edu
  singleuser:
    defaultUrl: "/tree"
  hub:
    extraConfig:
      01-custom-attr-spawner: |
        from kubespawner import KubeSpawner
        from tornado import gen
        import z2jh

        class CustomAttrSpawner(KubeSpawner):

          @gen.coroutine
          def start(self):
            custom_memory = z2jh.get_config('custom.memory', {})
            for attr, users in custom_memory.items():
              if self.user.name in users:
                self.mem_limit = attr
                self.mem_guarantee = attr
                break

            return (yield super().start())

        c.JupyterHub.spawner_class = CustomAttrSpawner

        c.JupyterHub.extra_log_file = '/srv/jupyterhub/jupyterhub.log'

        # HACK: this is temporary and will go away soon (~0.6)
        if 'HUB_USERNAME_MAP' in os.environ:
            # expect badname1=goodname1:badname2=goodname2
            c.Authenticator.username_map = {}
            keyvals = os.environ['HUB_USERNAME_MAP']
            for keyval in keyvals.split(':'):
                key, val = keyval.split('=')
                c.Authenticator.username_map[key] = val
      02-lab-availability: |
        c.Spawner.cmd = ['jupyter-labhub']
