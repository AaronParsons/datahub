jupyterhub:
  scheduling:
    userScheduler:
      enabled: true
  proxy:
    https:
      letsencrypt:
        contactEmail: yuvipanda@berkeley.edu
  hub:
    extraConfig: |
      from kubespawner import KubeSpawner
      from tornado import gen
      import yaml
      import os

      class CustomAttrSpawner(KubeSpawner):

        @gen.coroutine
        def start(self):
          with open('/etc/jupyterhub/config/custom.memory') as f:
            custom_attr_lists = yaml.safe_load(f)
            for attr, users in custom_attr_lists.items():
              if self.user.name in users:
                self.mem_limit = attr
                self.mem_guarantee = attr
                break

          return (yield super().start())

      c.JupyterHub.spawner_class = CustomAttrSpawner

      c.JupyterHub.extra_log_file = '/srv/jupyterhub/jupyterhub.log'

      # HACK: this is temporary and will go away soon (~0.6)
      if 'HUB_USERNAME_MAP' in os.environ:
          # expect badname1=goodname1:badname2=goodname2
          c.Authenticator.username_map = {}
          keyvals = os.environ['HUB_USERNAME_MAP']
          for keyval in keyvals.split(':'):
              key, val = keyval.split('=')
              c.Authenticator.username_map[key] = val
